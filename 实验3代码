package city;

import java.io.*;
import java.util.*;
import java.util.stream.Collectors;

public class Test {
   public static List<String> sf = new ArrayList<>();
   public static void main(String[] args) throws IOException{
	   List<String> sf1 = new ArrayList<>();  //创建一个列表，用来装按行读取到的内容
	   Scanner s = new Scanner(System.in);
	   String path ="C:\\Users\\x'l\\Desktop\\%S";
	   String in = s.nextLine();
	   String[] city = in.split(" ");
	   String name = "";
	   if(city.length == 3) {
		   name = city[2];
	   }
	   List<String> outList = new ArrayList<>();
	   List<String> list = toArrayByFileReader(String.format(path,city[0]));
	   if(null != name && !"".equals(name)) {
		   //查询
		   String finalName = name;
		   List<String> finalOutList = outList;
		   list.forEach(e ->{
			   if(e.contains(finalName)) {
				   finalOutList.add(e);
			   }
		   });
		   
		   String finalName1 = name;
		   sf1 = sf.stream().filter(e -> e.equals(finalName1)).collect(Collectors.toList());
	   }else {
		   sf1 = sf;
		   outList = list;
	   }
	   LinkedHashSet h = new LinkedHashSet(sf1);
	   sf1.clear();
	   sf1.addAll(h);
	   writeFile(sf1,outList,String.format(path, city[1]));
   }
   
   public static void writeFile(List<String> sf2,List<String> outList,String name) throws IOException {
	   PrintWriter pw = new PrintWriter(new FileWriter(name));
	   if(null != outList && outList.size() > 0) {
		   sf2.forEach(e ->{
			   pw.write(e);
			   pw.write("\n");
			   outList.forEach(e2 ->{
				   if(e2.contains(e)) {
					   pw.write(e2.replace(e, ""));
					   pw.write("\n");
				   }
			   });
		   });
		   
	   }
	   pw.close();
   }
   
   public static List<String> toArrayByFileReader(String name){
	   //使用ArrayList来存储每行读取到的字符串
	   ArrayList<String> arrayList = new ArrayList<>();
	   try {
		   FileReader fr = new FileReader(name);
		   BufferedReader bf = new BufferedReader(fr);
		   String str;
		   //执行读取字符串
		   while ((str = bf.readLine()) != null) {
			   arrayList.add(str);
			   sf.add(str.substring(0,3));
		   }
		   bf.close();
		   fr.close();
		   }
	   catch (IOException e) {
		   e.printStackTrace();
	   }
	   //返回数组
	   return arrayList;
   }
}
