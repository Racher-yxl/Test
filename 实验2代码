package db;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class ReadTxtUtils {
	  public static void main(String args[]) {
		  readFile();
	        writeFile();
	    }
	
	//读入文件
	    public static void readFile() {
	        String pathname = "C:\\Users\\x'l\\Desktop\\yq_in.txt"; // 绝对路径或相对路径都可以，写入文件时演示相对路径,读取以上路径的input.txt文件
	        //防止文件建立或读取失败，用catch捕捉错误并打印，也可以throw;
	        //不关闭文件会导致资源的泄露，读写文件都同理
	        try (FileReader reader = new FileReader(pathname);
	             BufferedReader br = new BufferedReader(reader) // 建立一个对象，它把文件内容转成计算机能读懂的语言
	        ) {
	            String line;
	            while ((line = br.readLine()) != null) {
	                // 一次读入一行数据
	                System.out.println(line);
	            }
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	    }


//写入TXT文件
	    public static void writeFile() {
	        try {
	            File writeName = new File("C:\\Users\\x'l\\Desktop\\yq_out.txt"); // 相对路径，如果没有则要建立一个新的output.txt文件
	            writeName.createNewFile(); // 创建新文件,有同名的文件的话直接覆盖
	            try (FileWriter writer = new FileWriter(writeName);
	                 BufferedWriter out = new BufferedWriter(writer)
	            ) {
	                
	                		out.write("\r\n"); // \r\n即为换行
	              
	                out.flush(); // 把缓存区内容压入文件
	            }
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	    }
	}
